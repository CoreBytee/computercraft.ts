/** @noSelfInFile **/

type Key = number;

declare const keys: {
    a: Key;
    apostrophe: Key;
    at: Key;
    ax: Key;
    b: Key;
    backslash: Key;
    backspace: Key;
    c: Key;
    capsLock: Key;
    cimcumflex: Key;
    colon: Key;
    comma: Key;
    convert: Key;
    d: Key;
    'delete': Key;
    down: Key;
    e: Key;
    eight: Key;
    end: Key;
    enter: Key;
    equals: Key;
    f: Key;
    f1: Key;
    f10: Key;
    f11: Key;
    f12: Key;
    f13: Key;
    f14: Key;
    f15: Key;
    f2: Key;
    f3: Key;
    f4: Key;
    f5: Key;
    f6: Key;
    f7: Key;
    f8: Key;
    f9: Key;
    five: Key;
    four: Key;
    g: Key;
    grave: Key;
    h: Key;
    home: Key;
    i: Key;
    insert: Key;
    j: Key;
    k: Key;
    kana: Key;
    kanji: Key;
    l: Key;
    left: Key;
    leftAlt: Key;
    leftBracket: Key;
    leftCtrl: Key;
    leftShift: Key;
    m: Key;
    minus: Key;
    multiply: Key;
    n: Key;
    nine: Key;
    noconvert: Key;
    numLock: Key;
    numPad0: Key;
    numPad1: Key;
    numPad2: Key;
    numPad3: Key;
    numPad4: Key;
    numPad5: Key;
    numPad6: Key;
    numPad7: Key;
    numPad8: Key;
    numPad9: Key;
    numPadAdd: Key;
    numPadComma: Key;
    numPadDecimal: Key;
    numPadDivide: Key;
    numPadEnter: Key;
    numPadEquals: Key;
    numPadSubtract: Key;
    o: Key;
    one: Key;
    p: Key;
    pageDown: Key;
    pageUp: Key;
    pause: Key;
    period: Key;
    q: Key;
    r: Key;
    returnKey: Key;
    right: Key;
    rightAlt: Key;
    rightBracket: Key;
    rightCtrl: Key;
    rightShift: Key;
    s: Key;
    scollLock: Key;
    semiColon: Key;
    seven: Key;
    six: Key;
    slash: Key;
    space: Key;
    stop: Key;
    t: Key;
    tab: Key;
    three: Key;
    two: Key;
    u: Key;
    underscore: Key;
    up: Key;
    v: Key;
    w: Key;
    x: Key;
    y: Key;
    yen: Key;
    z: Key;
    zero: Key;
    getName(this: void, k: Key): string;
}
